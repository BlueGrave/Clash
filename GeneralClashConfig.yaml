#---------------------------------------------------#
# 配置文件需要放置在 $HOME/.config/clash/config.yml
# 或者运行目录下的config.yml
#---------------------------------------------------#
# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7890

# HTTP 代理端口
# port: 7890

# SOCKS5 代理端口
# socks-port: 7891

# Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)
# redir-port: 7892

# 允许局域网的连接（可用来共享代理）
allow-lan: true

# 仅在将allow-lan设置为true时适用
# #"*": 绑定所有IP地址
# #192.168.122.11: 绑定单个IPv4地址
# #"[aaaa::a8aa:ff:fe09:57d8]": 绑定单个IPv6地址
# bind-address: "*"
# ipv6: true

# 规则模式：Rule（规则） / Global（全局代理）/ Direct（全局直连）
mode: Rule

# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / error / warning / info / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# Clash 的 RESTful API
external-controller: '127.0.0.1:9090'

# 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `RESTful API/ui`
# 参数应填写配置目录的相对路径或绝对路径。
# http://127.0.0.1:9090/ui/#/
# external-ui: folder
# yacd面板：  https://github.com/haishanh/yacd
# Razord面板：http://clash.razord.top/#/proxies
# external-ui: dashboard

# RESTful API 的口令 (可选)
# secret: ""

# 实验性功能
experimental:
  ignore-resolve-fail: true # 忽略 DNS 解析失败，默认值为 true
#	interface-name: en0 # outbound interface name

# 本地 SOCKS5 / HTTP(S) 服务认证
# authentication:
#   - "user1:pass1"
#   - "user2:pass2"

# 实验性功能 hosts, 支持通配符 (例如 *.clash.dev 甚至 *.foo.*.example.com)
# 静态的域名 比 通配域名 具有更高的优先级 (foo.example.com 优先于 *.example.com)
# 注意: hosts 在 fake-ip 模式下不生效
# hosts:
#   '*.clash.dev': 127.0.0.1
#   'alpha.clash.dev': '::1'

dns:
# hosts:
#   'mtalk.google.com': 108.177.125.188
#   'services.googleapis.cn': 74.125.203.94
#   'raw.githubusercontent.com': 151.101.228.133
  enable: true # 是否启用 dns false
  ipv6: false
# listen: 0.0.0.0:53
  default-nameserver:
    - 223.5.5.5 # 阿里 DNS
    - 119.29.29.29 # 腾讯 DNS
    - 1.0.0.1 # Cloudflare DNS
    - 1.1.1.1 # Cloudflare DNS
#   - 1.2.4.8 # CNNIC DNS
#   - 114.114.114.114 # 114 DNS
#   - 180.76.76.76 # 百度 DNS
#   - 117.50.11.11 # ONE DNS 拦截版 恶意网站拦截、广告过滤
#   - 117.50.10.10 # ONE DNS 纯净版 直接返回其真实的响应结果
# interface-name: en0 # 出口网卡名称，或者使用下方的自动检测
  enhanced-mode: redir-host # or fake-ip
#    fake-ip-range: 198.18.0.1/16
#    fake-ip-filter: # fake ip 白名单列表，如果你不知道这个参数的作用，请勿修改
#      - "*.lan"
#      - time.windows.com
#      - time.nist.gov
#      - time.apple.com
#      - time.asia.apple.com
#      - "*.ntp.org.cn"
#      - "*.openwrt.pool.ntp.org"
#      - time1.cloud.tencent.com
#      - time.ustc.edu.cn
#      - pool.ntp.org
#      - ntp.ubuntu.com
#      - ntp.aliyun.com
#      - ntp1.aliyun.com
#      - ntp2.aliyun.com
#      - ntp3.aliyun.com
#      - ntp4.aliyun.com
#      - ntp5.aliyun.com
#      - ntp6.aliyun.com
#      - ntp7.aliyun.com
#      - time1.aliyun.com
#      - time2.aliyun.com
#      - time3.aliyun.com
#      - time4.aliyun.com
#      - time5.aliyun.com
#      - time6.aliyun.com
#      - time7.aliyun.com
#      - "*.time.edu.cn"
#      - time1.apple.com
#      - time2.apple.com
#      - time3.apple.com
#      - time4.apple.com
#      - time5.apple.com
#      - time6.apple.com
#      - time7.apple.com
#      - time1.google.com
#      - time2.google.com
#      - time3.google.com
#      - time4.google.com
#      - music.163.com
#      - "*.music.163.com"
#      - "*.126.net"
#      - musicapi.taihe.com
#      - music.taihe.com
#      - songsearch.kugou.com
#      - trackercdn.kugou.com
#      - "*.kuwo.cn"
#      - api-jooxtt.sanook.com
#      - api.joox.com
#      - joox.com
#      - y.qq.com
#      - "*.y.qq.com"
#      - streamoc.music.tc.qq.com
#      - mobileoc.music.tc.qq.com
#      - isure.stream.qqmusic.qq.com
#      - dl.stream.qqmusic.qq.com
#      - aqqmusic.tc.qq.com
#      - amobile.music.tc.qq.com
#      - "*.xiami.com"
#      - "*.music.migu.cn"
#      - music.migu.cn
#      - "*.msftconnecttest.com"
#      - "*.msftncsi.com"
#      - localhost.ptlogin2.qq.com
#      - "*.*.*.srv.nintendo.net"
#      - "*.*.stun.playstation.net"
#      - xbox.*.*.microsoft.com
#      - "*.*.xboxlive.com"
  nameserver:
    - https://223.5.5.5/dns-query # Ali DoH
    - https://223.6.6.6/dns-query # Ali DoH
#   - https://dns.alidns.com/dns-query # Ali DoH
    - https://dns.pub/dns-query # Tencent DoH
    - https://doh.opendns.com/dns-query # OpenDNS DoH
    - https://dns.rubyfish.cn/dns-query # Rubyfish DoH
    - https://cdn-doh.ssnm.xyz/dns-query
  fallback:
    - https://1.0.0.1/dns-query # Cloudflare DoH
    - https://1.1.1.1/dns-query # Cloudflare DoH
#   - https://cloudflare-dns.com/dns-query # Cloudflare DoH
    - https://dns.google/dns-query # Google DoH
    - https://doh.xeton.dev/dns-query
    - https://public.dns.iij.jp/dns-query
    - https://dns.twnic.tw/dns-query
#   - https://dns.alidns.com/resolve
#   - https://dns.google/resolve
#   - https://dns.nextdns.io/6a9581 # NextDNS DoH
    - tls://1.0.0.1:853 # Cloudflare DoT
    - tls://1.1.1.1:853 # Cloudflare DoT
#   - tls://cloudflare-dns.com:853  # Cloudflare DoT
    - tls://dns.rubyfish.cn:853 # Rubyfish DoT
    - tls://dns.google:853 # Google DoT
    - tls://dns.adguard.com:853 # Adguard DoT
#   - tls://6a9581.dns.nextdns.io # NextDNS DoT
  fallback-filter:
     geoip: true # 默认
     ipcidr: # 在这个网段内的 IP 地址会被考虑为被污染的 IP
       - 240.0.0.0/4
       - 0.0.0.0/32
       - 127.0.0.1/32
     domain:
       - +.google.com
       - +.facebook.com
       - +.twitter.com
       - +.youtube.com
       - +.xn--ngstr-lra8j.com
       - +.google.cn
       - +.googleapis.cn
       - +.gvt1.com

# tun:
#   enable: true
#   stack: gvisor # only gvisor (Windows)
#   stack: system # or gvisor (macOS)
#   macos-auto-route: true # auto set global route
# It is recommended to use `interface-name` (Windows)
#   macos-auto-detect-interface: true # 自动检测出口网卡，conflict with interface-name
#   dns-hijack:
#     - 198.18.0.2:53 # when `fake-ip-range` is 198.18.0.1/16, should hijack 198.18.0.2:53 (Windows)
#     - 223.5.5.5 # macOS 可任意设置，但为了保证CFW关闭后能不影响联网，建议设置真实能访问的DNS服务器

# 1. clash DNS 请求逻辑：
#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内，解析最快的结果。
#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
#
#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
#
# 2. clash DNS 配置注意事项：
#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
#
# 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。

# 代理组
# 下面这3个不要引到订阅里去 要不会出错
# Will be ignored after profile selection
#Proxy:
#  - name: Shadowsocks
#    type: socks5
#    server: 127.0.0.1
#    port: 1080
#Proxy Group:
#  - name: Proxy
#    type: select
#    proxies:
#      - Shadowsocks
#Rule:
#  - 'MATCH,DIRECT'
